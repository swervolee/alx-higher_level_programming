          THE 0-ADD_INTEGER MODULE
	  ==========================

Importing function from the module:
>>> add_integer = __import__('0-add_integer').add_integer

Adding 3 and 5:
>>> add_integer(3, 5)
8

Subtraction of 10 and 2
>>> add_integer(10, -2)
8

Adding 2.1 and 8:
>>> add_integer(2.1, 8)
10

Adding an integer and string:
>>> add_integer(2, "hello")
Traceback (most recent call last):
  		 ...
TypeError: b must be an integer

Giving none as input
>>> add_integer(4, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

Giving a tuple as input
>>> add_integer((2, 3))
Traceback (most recent call last):
...
TypeError: a must be an integer

Adding a number and a list
>>> add_integer(2, [])
Traceback (most recent call last):
...
TypeError: b must be an integer

Giving a string as input
>>> add_integer("Hello")
Traceback (most recent call last):
...
TypeError: a must be an integer


Adding two float numbers
>>> add_integer(2.2, 2.2)
4

susbtracting 98 and 1
>>> add_integer(-1)
97

Overflow test
>>> add_integer(float('inf'), 0)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

Overflow test2:
>>> add_integer(float('inf'), float('inf'))
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer


Testing the data type Nan
>>> add_integer(0, float('nan'))
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer
